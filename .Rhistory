Reduced_Questions <- subset(t(QuestionCount50), select = -c(which(QuestionCount50[,1] >= 15)))
Reduced_Admin_DF_All<- subset(Admin_DF_All, select = - c( V74B, V90,V91,V9,V93,V94,
v160A,v160B,v160C,v160D,v160E,v160F,v160G,v160H,v160I,v160J,
V217_ESMA,V218_ESMA,V224_ESMA,V220_ESMA,V221_ESMA,V222_ESMA,
V228A,V228B,V228C,V228D,V228E,V228F,V228G,V228H,V228I,V228J,V228K,
V243_AU,V244_AU,V56_NZ,V203A,V207A))
ReducedAdminNAQuestionCount <- c()
for(i in 1:60){
count = sum(Reduced_Admin_DF_All[i,] == 100)
ReducedAdminNAQuestionCount <- rbind(ReducedAdminNAQuestionCount, count)
}
rownames(ReducedAdminNAQuestionCount) <- rownames(Reduced_Admin_DF_All)
sort(ReducedAdminNAQuestionCount, decreasing = TRUE)
#pdf("ReducedAdminNAQuestionCount.pdf")
barplot(t(ReducedAdminNAQuestionCount), xlab = "Countries", ylab = "Number of Questions Skipped")
abline(h=5)
abline(h=10, col="red")
abline(h=15, col="grey")
abline(h=20, col="blue")
#dev.off()
View(ReducedAdminNAQuestionCount)
View(ReducedAdminNAQuestionCount)
View(Reduced_Admin_DF_All)
Removed_Countries_AdminNA <- Reduced_Admin_DF_All[rownames( Cleaned_Categorical_Ordinal_Data) %in% c(414, 634,48,818), ]
Removed_Countries_AdminNA <- Reduced_Admin_DF_All[rownames(Reduced_Admin_DF_All) %in% c(414, 634,48,818), ]
View(Removed_Countries_AdminNA)
matplot(Comparison_Questions_AdminNA[c(150:270),c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "# of Countries who Skipped")
legend("topleft", legend = c("50", "75", "90", "100"), col=1:4, pch=1)
abline(h=10)
abline(h=20, col="red")
abline(h=15, col="grey")
abline(h=30, col="blue")
View(Comparison_Questions_AdminNA)
matplot(Comparison_Questions_AdminNA[c(1:270),c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "# of Countries who Skipped")
legend("topleft", legend = c("50", "75", "90", "100"), col=1:4, pch=1)
abline(h=10)
abline(h=20, col="red")
abline(h=15, col="grey")
abline(h=30, col="blue")
matplot(Comparison_Questions_AdminNA[c(150:270),c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "# of Countries who Skipped")
legend("topleft", legend = c("50", "75", "90", "100"), col=1:4, pch=1)
abline(h=10)
abline(h=20, col="red")
abline(h=15, col="grey")
abline(h=30, col="blue")
matplot(Removed_Countries_AdminNA,c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
matplot(Removed_Countries_AdminNA[,c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[,c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
matplot(Removed_Countries_AdminNA, type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
matplot(Removed_Countries_AdminNA, type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
legend("topleft", legend = row.names(Removed_Countries_AdminNA), col=1:4, pch=1)
View(Removed_Countries_AdminNA)
plot(Removed_Countries_AdminNA, type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA, type = "p", pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA, pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA, type = "p", col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
mat
matplot(Removed_Countries_AdminNA, type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
hist(Removed_Countries_AdminNA[1,])
Removed_Countries_AdminNA[1,]
summary(is.na(Removed_Countries_AdminNA[1,]))
plot(Removed_Countries_AdminNA[1,])
matplot(Removed_Countries_AdminNA[,c(1:50)], type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
Removed_Countries_AdminNA[,c(1:50)]
?matplot
plot(Removed_Countries_AdminNA[,c(1:50)], type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,c(1:50)], type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)], type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)], type = p, pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)], type = 'p' , pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)], type = 'p',col=1:4, xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)], type = 'p', xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)],  xlab = "Question", ylab = "% of People not asked Question")
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:50)])
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:10)])
plot(Removed_Countries_AdminNA[1,],Removed_Countries_AdminNA[,c(1:10)], xlim = c(0, 100))
hist(Removed_Countries_AdminNA[1,])
str(Removed_Countries_AdminNA[1,])
sum(Removed_Countries_AdminNA[1,])
?hist
barplot(Removed_Countries_AdminNA[1,])
barplot(Removed_Countries_AdminNA[1,c(1:50)])
barplot(Removed_Countries_AdminNA[2,c(1:50)])
matplot(t(Removed_Countries_AdminNA), type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
matplot(t(Removed_Countries_AdminNA), type = c("p"), pch=1, col=1:4, xlab = "Question", ylab = "% of People not asked Question")
legend("topleft", legend = row.names(Removed_Countries_AdminNA), col=1:4, pch=1)
Cat_Precentage_DFs <- cbind(V4,V5,V6,V7,V8,V9,V10,V11,V12,V13,V14,V15,V16,V17,V18,V19,V20,V21,V22,V25,V26,V27,V28,
V29,V30,V31,V32,V33,V34,V35,V37,V42,V39,V38,V36,V40,V41,V43,V44,V24,V70,V71,V72,V73,V75,
V76, V77,V78,V79,V74,V164,V165,V166,V167,V168,V169,V81,V82,V83,V45,V46,
V102,V49,V54,V51,V52,V50,V48,V47,V53,
V60,V61,V62,V63,V64,V65,V66,V67,V68,V69,V80,V84,V85,V86,V87,V88,V89,V108,V109,V110,V111,V112,
V113,V114,V115,V116,V117,V118,V119,V120,V121,V122,V123,V124,V126,V127,V128,V129,V130,V142,
V217,V218,V219,V220,V221,V222,V223,V224,V225,V226,V227,
V143,V145,V146,V147,V148,V149,V150,V151,V153,V154,V155,V156,
V211,V103,V104,V106,V107,V212,V213,V214,V216,V243,V244,V245,V246,
V170,V171,V172,V173,V174,V175,V176,V177,V178,V179,V180,V181,V182,V183,V184,V185,V186,V187,V188,
V189,V190,V191,
V57,V58,V229,V230,V234,V235,V236,V237,V238,V240,V248,V250,V253,V255)
#Remove the columns that are just zeros. This step removes categories that were not used by questions.
Cat_Final_Precentage_DFs<- Cat_Precentage_DFs[,-(which(colSums(Cat_Precentage_DFs) == 0))]
Ordinal_Final_Precentage_DFs <- cbind(V23_Category,
V56_Category,V55_Category,V157_Category,V158_Category,V159_Category,
V160_Category,V164_Category,V59_Category,V95_Category,V96_Category,V97_Category,
V98_Category,V99_Category,V100_Category,V101_Category,V131_Category,V132_Category,
V133_Category,V134_Category,V135_Category,V136_Category,V137_Category,V138_Category,
V140_Category,V141_Category,V192_Category,V193_Category,V194_Category,
V197_Category,V152_Category,V198_Category,V200_Category,V209_Category,
V210_Category,V199_Category,V201_Category,V202_Category,V203_Category,
V204_Category,V205_Category,V207_Category, V206_Category,V208_Category,
V231_Category,V232_Category,V233_Category,V239_Category,
PFL_5Scale_Cat)
Cleaned_Categorical_Ordinal_Data<- cbind(Cat_Final_Precentage_DFs,Ordinal_Final_Precentage_DFs)
#We need to remove the countries chosen above
Cleaned_Categorical_Ordinal_Data_56 <- Cleaned_Categorical_Ordinal_Data[!rownames( Cleaned_Categorical_Ordinal_Data) %in% c(414, 634,48,818), ]
#Now that we have completed the sensitiviy analysis we need to remove all the "AdminNA" Columns
WVS_Data_Precentages<- Cleaned_Categorical_Ordinal_Data_56[, -grep("Admin", colnames(Cleaned_Categorical_Ordinal_Data_56))]
write.csv(WVS_Data_Precentages, file = "WVS_Data_Percentages.csv")
corrplot(AdminNA_DF_Ordinal, is.corr = FALSE, method = "color", tl.cex=0.5, tl.col= "black" , col= colorRampPalette(c("blue", "gray", "red"))(100), cl.lim=c(0,100), addgrid.col = "white", title = "AdminNA", mar = c(2,2,2,2))
corrplot(Missing_DF_Ordinal, is.corr = FALSE, method = "color", tl.cex=0.5, tl.col= "black" , col= colorRampPalette(c("blue", "gray", "red"))(100), cl.lim=c(0,100), addgrid.col = "white", title = "Missingness", mar = c(2,2,2,2))
Missing_DF_All<- as.data.frame(cbind(Missing_DF, Missing_DF_Ordinal))
colSums(is.na(Missing_DF_All)) #double checking that there are no NAs
QuestionCount50 = c()
count=0 #reset count
for(i in 1:270){
count = sum(Missing_DF_All[,i] >= 50)
QuestionCount50 <- rbind(QuestionCount50, count)
}
rownames(QuestionCount50)<-colnames(Missing_DF_All) #label with question names
barplot(t(QuestionCount50), xlab = "Question", ylab = "Number of Countries who Skipped", main = "50% or Greater Missing")
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
barplot(t(QuestionCount50[c(150:270),1]), xlab = "Question", ylab = "Number of Countries who Skipped",
main = "50% or Greater Missing", names.arg = rownames(QuestionCount50[c(150:270),]))
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
View(QuestionCount50)
Comparison_Questions_AdminNA <- cbind(QuestionCount50,QuestionCount75,QuestionCount90,QuestionCount100)
matplot(Comparison_Questions_AdminNA[c(1:270),c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "# of Countries who Skipped")
legend("topleft", legend = c("50", "75", "90", "100"), col=1:4, pch=1)
abline(h=10)
abline(h=20, col="red")
abline(h=15, col="grey")
abline(h=30, col="blue")
#pdf("Comparison_Sensitivity.pdf")
matplot(Comparison_Questions_AdminNA[c(150:270),c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "# of Countries who Skipped")
legend("topleft", legend = c("50", "75", "90", "100"), col=1:4, pch=1)
abline(h=10)
abline(h=20, col="red")
abline(h=15, col="grey")
abline(h=30, col="blue")
#dev.off()
barplot(t(QuestionCount50[c(1:270),1]), xlab = "Question", ylab = "Number of Countries who Skipped",
main = "50% or Greater Missing", names.arg = rownames(QuestionCount50[c(150:270),]))
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
barplot(t(QuestionCount50), xlab = "Question", ylab = "Number of Countries who Skipped", main = "50% or Greater Missing")
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
QuestionCount75 = c()
count=0 #reset count
for(i in 1:270){
count = sum(Missing_DF_All[,i] >= 75)
QuestionCount75 <- rbind(QuestionCount75, count)
}
rownames(QuestionCount75)<-colnames(Missing_DF_All) #label with question names
barplot(t(QuestionCount75), xlab = "Question", ylab = "Number of Countries who Skipped", main = "75% or Greater Missing")
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
QuestionCount90 = c()
count=0 #reset count
for(i in 1:270){
count = sum(Missing_DF_All[,i] >= 90)
QuestionCount90 <- rbind(QuestionCount90, count)
}
rownames(QuestionCount90)<-colnames(Missing_DF_All) #label with question names
barplot(t(QuestionCount90), xlab = "Question", ylab = "Number of Countries who Skipped", main = "90% or Greater Missing")
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
View(QuestionCount90)
QuestionCount100 = c()
count=0 #reset count
for(i in 1:270){
count = sum(Missing_DF_All[,i] == 100)
QuestionCount100 <- rbind(QuestionCount100, count)
}
rownames(QuestionCount100)<-colnames(Missing_DF_All) #label with question names
barplot(t(QuestionCount100), xlab = "Question", ylab = "Number of Countries who Skipped", main = "100% Missing")
abline(h=15)
abline(h=20, col="red")
abline(h=25, col="grey")
abline(h=30, col="blue")
View(QuestionCount100)
Comparison_Questions_Missing <- cbind(QuestionCount50,QuestionCount75,QuestionCount90,QuestionCount100)
matplot(Comparison_Questions_Missing[c(1:270),c(1:4)], type = c("b"), pch=1, col=1:4, xlab = "Question", ylab = "# of Countries who Skipped")
legend("topleft", legend = c("50", "75", "90", "100"), col=1:4, pch=1)
abline(h=10)
abline(h=20, col="red")
abline(h=15, col="grey")
abline(h=30, col="blue")
View(QuestionCount50)
View(QuestionCount100)
View(QuestionCount75)
View(QuestionCount75)
load("~/GitHub/WVS_Analysis_Leigh_Allison/WVS Documentation & Data/WV6_Data_R_v_2016_01_01.rdata")
Wave6 <- WV6_Data_R
PFL_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V4", "V5", "V6", "V7", "V8", "V9", "V10", "V11", "V12", "V13", "V14", "V15", "V16", "V17", "V18",
"V19", "V20", "V21", "V22", "V25", "V26", "V27", "V28", "V29", "V30", "V31", "V32", "V33", "V34",
"V35", "V37", "V42", "V39", "V38", "V36", "V40", "V41", "V43", "V44", "V24", "V56_NZ", "V56",
"V23", "V55", "V70", "V71","V72", "V73", "V74B", "V75", "V76", "V77", "V78", "V79", "V74", "V157",
"V158", "V159", "V160", "V161", "V162", "V163", "V164", "V165", "V166", "V167", "V168", "V169",
"V160A", "V160B", "V160C", "V160D", "V160E", "V160F", "V160G", "V160H", "V160I", "V160J" )]
write.csv(PFL_Wave6, "PFL_Raw_Data.csv")
Categorical_subset <- PFL_Wave6[,c("V2","V258","V4", "V5", "V6", "V7", "V8", "V9", "V10", "V11", "V12", "V13", "V14","V15",
"V16", "V17", "V18", "V19", "V20", "V21", "V22", "V25", "V26", "V27", "V28", "V29",
"V30", "V31", "V32", "V33", "V34", "V35", "V37", "V42", "V39", "V38", "V36", "V40",
"V41", "V43", "V44", "V24", "V70", "V71","V72", "V73", "V74B", "V75", "V76", "V77",
"V78", "V79", "V74","V165", "V166", "V167", "V168", "V169",
"V160A", "V160B", "V160C", "V160D", "V160E", "V160F", "V160G", "V160H", "V160I",
"V160J" )]
Ordinal_subset <- PFL_Wave6[,c("V2", "V258", "V23", "V56_NZ", "V56","V55","V157", "V158", "V159", "V160","V164")]
Ordinal_subset_5scale <- PFL_Wave6[,c("V161", "V162", "V163")]
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:68)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:9)){
hist(Ordinal_subset[,i], main = names(Ordinal_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
PFL_Categorical_subset <- Categorical_subset
write.csv(PFL_Categorical_subset, "PFL_Categorical_subset.csv")
PFL_Ordinal_Subset <- Ordinal_subset
write.csv(PFL_Ordinal_Subset, "PFL_Ordinal_subset.csv")
PFL_5Ordinal_Subset <- Ordinal_subset_5scale
write.csv(PFL_5Ordinal_Subset, "PFL_5Ordinal_subset.csv")
Enviro_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V81", "V82" , "V83")]
write.csv(Enviro_Wave6, "Enviro_Raw_Data.csv")
Categorical_subset <- Enviro_Wave6[,c("V2","V258","V81", "V82" , "V83")]
Enviro_Categorical_subset <- Categorical_subset
write.csv(Enviro_Categorical_subset, "Enviro_Categorical_Subset.csv")
#No questions in environmental were ordinal
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:5)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
Work_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V45", "V46", "V59")]
write.csv(Work_Wave6, "Work_Raw_Data.csv")
Categorical_subset <- Work_Wave6[,c("V2","V258","V45", "V46")]
Work_Categorical_subset <- Categorical_subset
write.csv(Work_Categorical_subset, "Work_Categorical_subset.csv")
Ordinal_subset <-Work_Wave6[,c("V2","V258","V59")]
Work_Ordinal_subset <-Ordinal_subset
write.csv(Work_Ordinal_subset, "Work_Ordinal_subset.csv")
par(mfrow = c(1,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:4)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
for(i in c(3:3)){
hist(Ordinal_subset[,i], main = names(Ordinal_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
Fam_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V102", "V49", "V54", "V51", "V52", "V50", "V48", "V47", "V53")]
write.csv(Fam_Wave6, "Fam_Raw_Data.csv")
Categorical_subset <- Fam_Wave6[,c("V2","V258","V102", "V49", "V54", "V51", "V52", "V50", "V48", "V47", "V53")]
Fam_Categorical_subset <- Categorical_subset
write.csv(Fam_Categorical_subset, "Fam_Categorical_subset.csv")
#No ordinal questions in Family
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:11)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
PS_Wave6<- Wave6[ ,c("V2", #country code
"V258", #respondant weight
"V60", "V61", "V62", "V63", "V64", "V65", "V66", "V67", "V68", "V69",
"V80", "V84", "V85", "V86", "V87" , "V88" , "V89",
"V90", "V91", "V92", "V93", "V94", "V95", "V96", "V97", "V98", "V99",
"V100", "V101", "V108", "V109", "V110",
"V111", "V112", "V113", "V114", "V115",
"V116", "V117", "V118", "V119","V120",
"V121", "V122", "V123",  "V124", "V126",
"V127", "V128", "V129",
"V130", "V131", "V132", "V133", "V134", "V135", "V136", "V137","V138",
"V140","V141", "V142",
"V192", "V193", "V194", "V197",
"V225", "V226", "V227")]
PS_Wave6_125 <-Wave6[, c("V125_15", "V125_09", "V125_00", "V125_08", "V125_05", "V125_06", "V125_12",
"V125_01", "V125_14", "V125_02", "V125_07", "V125_10", "V125_04", "V125_11",
"V125_13", "V125_03", "V125_16", "V125_17" )]
PS_Wave_22XX <-Wave6[, c("V228_2", "V228", "V217_ESMA", "V217", "V218_ESMA", "V218", "V223", "V224_ESMA",
"V224", "V219", "V219_ESMA", "V220_ESMA", "V220", "V221_ESMA", "V221",
"V222_ESMA", "V222", "V228A", "V228B", "V228C","V228D","V228E","V228F",
"V228G", "V228H", "V228I",  "V228J","V228K")]
PS_Wave6 <- cbind(PS_Wave6, PS_Wave6_125, PS_Wave_22XX)
write.csv(PS_Wave6,"PS_Raw_Data.csv")
#125 not included because the question was changed for each country
Categorical_subset <- PS_Wave6[,c("V2", "V258",
"V60", "V61", "V62", "V63", "V64", "V65", "V66", "V67", "V68", "V69",
"V80", "V84", "V85", "V86", "V87" , "V88" , "V89","V90", "V91", "V92", "V93", "V94",
"V108", "V109", "V110", "V111", "V112", "V113", "V114", "V115", "V116", "V117",
"V118", "V119","V120", "V121", "V122", "V123",  "V124", "V126", "V127", "V128",
"V129", "V130", "V142", "V225", "V226", "V227",
"V228_2", "V228", "V217_ESMA", "V217", "V218_ESMA", "V218", "V223", "V224_ESMA",
"V224", "V219", "V219_ESMA", "V220_ESMA", "V220", "V221_ESMA", "V221",
"V222_ESMA", "V222", "V228A", "V228B", "V228C","V228D","V228E","V228F",
"V228G", "V228H", "V228I",  "V228J","V228K")]
Ordinal_subset <- PS_Wave6[,c("V2","V258","V95", "V96", "V97", "V98", "V99",
"V100", "V101",
"V131", "V132", "V133", "V134", "V135", "V136", "V137","V138",
"V140","V141", "V192", "V193", "V194", "V197")]
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:78)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:23)){
hist(Ordinal_subset[,i], main = names(Ordinal_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
PS_Categorical_subset <- Categorical_subset
write.csv(PS_Categorical_subset, "PS_Categorical_subset.csv")
PS_Ordinal_subset <-Ordinal_subset
write.csv(PS_Ordinal_subset, "PS_Ordinal_subset.csv")
RM_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V143", "V144", "V145", "V146", "V147", "V148", "V149", "V152", "V198", "V200", "V209", "V210",
"V199", "V201", "V202", "V203", "V203A", "V204", "V205", "V207A", "V207", "V206", "V208", "V150",
"V151", "V153", "V154", "V155", "V156")]
write.csv(RM_Wave6, "RM_Raw_Data.csv")
Categorical_subset <- RM_Wave6[,c("V2","V258", "V143", "V144", "V145", "V146", "V147", "V148", "V149", "V150",
"V151", "V153", "V154", "V155", "V156")]
Ordinal_subset <- RM_Wave6[,c("V2","V258","V152", "V198", "V200", "V209", "V210",
"V199", "V201", "V202", "V203", "V203A", "V204", "V205",
"V207A", "V207", "V206", "V208")]
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:15)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:18)){
hist(Ordinal_subset[,i], main = names(Ordinal_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
RM_Categorical_subset <- Categorical_subset
write.csv(RM_Categorical_subset, "RM_Categorical_subset.csv")
RM_Ordinal_Subset <- Ordinal_subset
write.csv(RM_Ordinal_Subset, "RM_Ordinal_subset.csv")
Nation_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V211", "V103", "V104", "V105", "V106", "V107", "V247", "V212", "V213", "V214", "V215_08", "V215_07",
"V215_01", "V215_02", "V215_14", "V215_10", "V215_11", "V215_04", "V215_12", "V215_05", "V215_13",
"V215_06", "V215_03", "V215_15", "V215_16", "V215_17", "V215_18", "V216", "V243", "V243_AU",
"V244", "V244_AU", "V245", "V246")]
write.csv(Nation_Wave6, "Nation_Raw_Data.csv")
Categorical_subset <- Nation_Wave6[,c("V2","V258","V211", "V103", "V104", "V105", "V106", "V107", "V247", "V212", "V213",
"V214",
"V215_08", "V215_07", "V215_01", "V215_02", "V215_14", "V215_10", "V215_11", "V215_04",
"V215_12", "V215_05", "V215_13", "V215_06", "V215_03", "V215_15", "V215_16", "V215_17",
"V215_18", "V216", "V243", "V243_AU", "V244", "V244_AU", "V245", "V246")]
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:36)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
Nation_Categorical_subset <- Categorical_subset
write.csv(Nation_Categorical_subset, "Nation_Categorical_subset.csv")
Security_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V170", "V171", "V172", "V173", "V174", "V175", "V176", "V177", "V178", "V179"
,"V180", "V181", "V182", "V183", "V184", "V185", "V186", "V187", "V188", "V189"
,"V190", "V191")]
write.csv(Security_Wave6, "Security_Raw_Data.csv")
Categorical_subset <- Security_Wave6[,c("V2","V258", "V170", "V171", "V172", "V173", "V174", "V175", "V176",
"V177", "V178", "V179" ,"V180", "V181", "V182", "V183", "V184",
"V185", "V186", "V187", "V188", "V189", "V190", "V191")]
Security_Categorical_subset <- Categorical_subset
write.csv(Security_Categorical_subset, "Security_Categorical_subset.csv")
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:24)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
Science_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V195", "V196")]
write.csv(Science_Wave6, "Science_Raw_Data.csv")
Ordinal_subset <- Science_Wave6[,c("V2","V258", "V195", "V196")]
Science_Ordinal_Subset <- Ordinal_subset
write.csv(Science_Ordinal_Subset, "Science_Ordinal_subset.csv")
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:4)){
hist(Ordinal_subset[,i], main = names(Ordinal_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
SD_Wave6 <- Wave6[ , c("V2", #country code
"V258", #respondant weight
"V57", "V58", "V229", "V230", "V231", "V232", "V233", "V234", "V235", "V236", "V237", "V238", "V239",
"V240", "V241", "V242", "V248", "V249", "V250", "V253", "V254", "V255", "V256")]
write.csv(SD_Wave6, "SD_Raw_Data.csv")
Categorical_subset <- SD_Wave6[,c("V2","V258", "V57", "V58", "V229", "V230", "V234", "V235", "V236", "V237", "V238",
"V240",  "V248", "V250", "V253", "V254", "V255", "V256")]
SD_Categorical_subset <- Categorical_subset
write.csv(SD_Categorical_subset, "SD_Categorical_subset.csv")
Ordinal_subset <- SD_Wave6[,c("V2","V258", "V231", "V232", "V233", "V239")]
Science_Ordinal_Subset <- Ordinal_subset
write.csv(Science_Ordinal_Subset, "Science_Ordinal_subset.csv")
Free_Response_subset <- SD_Wave6[,c("V2", "V258", "V241", "V242", "V249")]
write.csv(Free_Response_subset, "FR_subset.csv")
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:17)){
hist(Categorical_subset[,i], main = names(Categorical_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:6)){
hist(Ordinal_subset[,i], main = names(Ordinal_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
par(mfrow = c(3,3), mar = c(1., 1, 1.25, 1.25))
for(i in c(3:5)){
hist(Free_Response_subset[,i], main = names(Free_Response_subset)[i],
xlab = "", ylab = "",
cex.main = .9, cex.axis = .7, mgp=c(0.25,0.25,0))
}
var(WVS_Data_Precentages[,1])
Variances <- c()
for(i in 1358){
Question_Variance <- var(WVS_Data_Precentages[,i])
Variances <- cbind(Variances, Question_Variance)
}
View(Variances)
Question_Variance <-0
Variances <- c()
for(i in 1358){
Question_Variance <- var(WVS_Data_Precentages[,i])
Variances <- cbind(Variances, Question_Variance)
}
var(WVS_Data_Precentages[,1358])
Question_Variance <-0
Variances <- c()
for(i in 1358){
Question_Variance <- var(WVS_Data_Precentages[,i])
Variances <- rbind(Variances, Question_Variance)
}
Variances <- c()
for(i in 1:1358){
Question_Variance <- var(WVS_Data_Precentages[,i])
Variances <- rbind(Variances, Question_Variance)
}
Variances <- c()
for(i in 1:1358){
Question_Variance <- var(WVS_Data_Precentages[,i])
Variances <- cbind(Variances, Question_Variance)
}
View(Variances)
colnames(Variances)<-colnames(WVS_Data_Precentages)
colnames(WVS_Data_Precentages)
View(Variances)
plot(Variances)
hist(Variances)
barplot(Variances)
hist(Variances)
hist(log(Variances)
barplot(Variances)
hist(log(Variances))
hist(Variances)
barplot(Variances)
View(Variances)
Variance_Sorted <- t(Variances)
View(Variance_Sorted)
